generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(cuid())
  email            String          @unique
  name             String
  password         String
  role             String          @default("USER")
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  addresses        Address[]
  cart             Cart?
  comments         Comment[]
  receivedMessages Message[]       @relation("ReceivedMessages")
  sentMessages     Message[]       @relation("SentMessages")
  orders           Order[]
  paymentMethods   PaymentMethod[]
}

model Address {
  id        String   @id @default(cuid())
  title     String
  firstName String
  lastName  String
  company   String?
  phone     String
  address   String
  city      String
  state     String
  zipCode   String
  country   String   @default("TÃ¼rkiye")
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PaymentMethod {
  id         String   @id @default(cuid())
  type       String
  title      String
  cardNumber String?
  cardHolder String?
  expiryDate String?
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Product {
  id          String      @id @default(cuid())
  name        String      @unique
  description String?
  price       Float
  imageUrl    String?
  stock       Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  categoryId  String
  cartItems   CartItem[]
  comments    Comment[]
  orderItems  OrderItem[]
  category    Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Order {
  id        String      @id @default(cuid())
  status    String      @default("PENDING")
  total     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  userId    String
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  quantity  Int
  price     Float
  orderId   String
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Cart {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartId    String
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@unique([cartId, productId])
}

model Message {
  id         String   @id @default(cuid())
  subject    String
  content    String
  isRead     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  senderId   String
  receiverId String
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
  sender     User     @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
}

model AboutPage {
  id             String   @id @default(cuid())
  title          String   @default("HakkÄ±mÄ±zda")
  heroTitle      String   @default("Livkors - Kalite ve ÅžÄ±klÄ±ÄŸÄ±n BuluÅŸtuÄŸu Yer")
  heroSubtitle   String   @default("2015 yÄ±lÄ±ndan beri kaliteli Ã§anta Ã¼retiminde Ã¶ncÃ¼ firma")
  storyTitle     String   @default("Hikayemiz")
  storyContent   String   @default("Livkors, 2015 yÄ±lÄ±nda kaliteli Ã§anta Ã¼retimi amacÄ±yla kurulmuÅŸtur...")
  visionTitle    String   @default("Vizyonumuz")
  visionContent  String   @default("Ã‡anta sektÃ¶rÃ¼nde kalite ve tasarÄ±m standardlarÄ±nÄ± belirlemeyi hedefliyoruz...")
  missionTitle   String   @default("Misyonumuz")
  missionContent String   @default("MÃ¼ÅŸterilerimize en kaliteli Ã¼rÃ¼nleri sunarak yaÅŸam kalitelerini artÄ±rmak...")
  phone          String   @default("+90 212 555 0123")
  email          String   @default("info@livkors.com")
  address        String   @default("Ä°stanbul, TÃ¼rkiye")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model SiteSettings {
  id              String   @id @default(cuid())
  siteName        String   @default("Livkors")
  siteDescription String   @default("Kaliteli Ã§antalar ve mÃ¼kemmel mÃ¼ÅŸteri hizmetinde Ã¶ncÃ¼ markayÄ±z")
  logoUrl         String?
  heroTitle       String   @default("Ã–zel TasarÄ±m Ã‡antalar")
  heroSubtitle    String   @default("Her tarza uygun kaliteli Ã§antalar. KadÄ±n, erkek ve Ã¶zel koleksiyonlar.")
  footerText      String   @default("Kaliteli Ã§antalar ve mÃ¼kemmel mÃ¼ÅŸteri hizmetinde Ã¶ncÃ¼ markayÄ±z.")
  socialFacebook  String?
  socialInstagram String?
  socialTwitter   String?
  socialLinkedin  String?
  metaTitle       String   @default("Livkors - Kaliteli Ã‡antalar")
  metaDescription String   @default("En kaliteli Ã§antalar, uygun fiyatlar ve hÄ±zlÄ± teslimat")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model HeroBanner {
  id          String   @id @default(cuid())
  title       String
  subtitle    String?
  description String?
  imageUrl    String
  buttonText  String?
  buttonLink  String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  rating    Int      @default(5)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TeamMember {
  id          String   @id @default(cuid())
  name        String
  position    String
  description String?
  imageUrl    String?
  emoji       String   @default("ðŸ‘¤")
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
